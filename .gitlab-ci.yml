stages:
  - build_frontend
  - build_image
  - deploy

variables:
  HUSKY: "0"
  HARBOR_REGISTRY_IMAGE: "${HARBOR_REGISTRY}/crater/document"

# 构建阶段：生成静态文件
build_frontend_main:
  stage: build_frontend
  image: harbor.act.buaa.edu.cn/crater/node-pnpm:21
  script:
    - pnpm config set store-dir .pnpm-store
    - pnpm config set registry https://registry.npmmirror.com
    - pnpm install
    - pnpm build # 这会生成 out/ 目录（静态导出模式）
  artifacts:
    paths:
      - out/ # 静态导出目录（Next.js 默认是 out/）
    expire_in: 1 week

# 构建镜像阶段（无需修改）
build_image_main:
  stage: build_image
  image:
    name: harbor.act.buaa.edu.cn/crater/kaniko-executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${HARBOR_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${HARBOR_REGISTRY_USER}" "${HARBOR_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${HARBOR_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  only:
    - main
  dependencies:
    - build_frontend_main

# 部署阶段（无需修改）
deploy_testing:
  stage: deploy
  image:
    name: harbor.act.buaa.edu.cn/crater/bitnami-kubectl:240302
    entrypoint: [""]
  script:
    - kubectl config use-context raids/resource-scheduling/crater/web-frontend:crater-cluster
    - kubectl set image deployment/crater-website crater-website-container=${HARBOR_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA} -n crater
  only:
    - main
  dependencies:
    - build_image_main

deploy_main:
  stage: deploy
  image:
    name: harbor.act.buaa.edu.cn/crater/bitnami-kubectl:240302
    entrypoint: [""]
  script:
    - kubectl config use-context raids/resource-scheduling/crater/web-frontend:actgpu-cluster
    - kubectl set image deployment/crater-website crater-website-container=${HARBOR_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA} -n crater
  only:
    - main
  dependencies:
    - build_image_main
